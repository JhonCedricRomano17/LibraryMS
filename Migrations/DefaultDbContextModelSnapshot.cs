// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jhoncedricromano.window.Infrastructure.Domain;

namespace jhoncedricromano.window.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    partial class DefaultDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("jhoncedricromano.window.Infrastructure.Domain.model.Book", b =>
                {
                    b.Property<Guid?>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("bkauthor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("bkpublisher")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("bktitle")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("BookID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookID = new Guid("1957baaa-ff27-47b6-9acc-8e907ef6c4bb"),
                            bkauthor = "Ken Folett",
                            bkpublisher = "ewan",
                            bktitle = "Fall of Giants"
                        },
                        new
                        {
                            BookID = new Guid("d44a592d-8860-497d-9154-3e82119ec464"),
                            bkauthor = "sam frost",
                            bkpublisher = "ewan",
                            bktitle = "The Hidden Maid"
                        },
                        new
                        {
                            BookID = new Guid("3d2863e5-d33f-40c0-ac76-879668da8cef"),
                            bkauthor = "Arthur Blake",
                            bkpublisher = "ewan",
                            bktitle = "Lust Royale"
                        });
                });

            modelBuilder.Entity("jhoncedricromano.window.Infrastructure.Domain.model.Student", b =>
                {
                    b.Property<Guid?>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("studentage")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("studentcourse")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("studentname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("StudentID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("jhoncedricromano.window.Infrastructure.Domain.model.User", b =>
                {
                    b.Property<Guid?>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
